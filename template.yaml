AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  airfoils-online

  Sample SAM Template for airfoils-online

Globals:

  Function:
    Timeout: 15
    MemorySize: 250
    LoggingConfig:
      LogFormat: JSON

  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:

  NACA4CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 3600
        MaxTTL: 86400
        MinTTL: 0
        Name: NACA4CachePolicy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingGzip: true

  AirfoilsOnlineApi:
    Type: AWS::Serverless::Api
    Properties:
      AlwaysDeploy: true
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./api.yaml

  NACA4AirfoilFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        NACA4Airfoil:
          Type: Api
          Properties:
            Path: /NACA4Airfoil
            Method: get
            RestApiId: !Ref AirfoilsOnlineApi
    Metadata:
      DockerTag: python3.11
      DockerContext: NACA4Airfoil/
      Dockerfile: Dockerfile

  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-lambda-invoke
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt NACA4AirfoilFunction.Arn

  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub "${AirfoilsOnlineApi}.execute-api.${AWS::Region}.amazonaws.com"
            Id: ApiOrigin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: ApiOrigin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: !Ref NACA4CachePolicy

  AirfoilsOnlineApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NACA4AirfoilFunction
      Principal: "apigateway.amazonaws.com"

Outputs:

  NACA4AirfoilApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${AirfoilsOnlineApi}.execute-api.${AWS::Region}.amazonaws.com/NACA4Airfoil/"
    
  NACA4AirfoilFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt NACA4AirfoilFunction.Arn

  NACA4AirfoilFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt NACA4AirfoilFunctionRole.Arn

  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${AirfoilsOnlineApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
